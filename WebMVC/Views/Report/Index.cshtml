@using WebMVC.EntityFramework;
@using WebMVC.Models;
@using System.Web;
@{
    ViewBag.Title = "Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var listSummary = ViewBag.listSummary as List<MERCHANT_SUMMARY>;
    var listRegion = ViewBag.listRegion as List<MERCHANT_SUMMARY>;
    var listMerchantType = ViewBag.listMerchantType as List<MERCHANT_SUMMARY>;
    var cardTypeReport = ViewBag.cardTypeReport as List<MERCHANT_SUMMARY>;
    var lineChartData = ViewBag.lineChartData as List<Statistic>;
    //region
    var NorthVN = listRegion.Find(x => x.RegionCode.Contains("NorthVN"));
    var SouthVN = listRegion.Find(x => x.RegionCode.Contains("SouthVN"));
    var MiddleVN = listRegion.Find(x => x.RegionCode.Contains("MiddleVN"));
    var NorthUSA = listRegion.Find(x => x.RegionCode.Contains("NorthUSA"));
    var OtherRegion = listRegion.Find(x => x.RegionCode.Contains(""));
    //Merchant Type
    var MerchantClothes = listMerchantType.Find(x => x.MerchantType.Contains("CL"));
    var MerchantDiner = listMerchantType.Find(x => x.MerchantType.Contains("DN"));
    var MerchantHotel = listMerchantType.Find(x => x.MerchantType.Contains("KS"));
    var MerchantResort = listMerchantType.Find(x => x.MerchantType.Contains("RS"));
    var MerchantSupermarket = listMerchantType.Find(x => x.MerchantType.Contains("SM"));
    var MerchantStore = listMerchantType.Find(x => x.MerchantType.Contains("ST"));
    var OtherMerchant = listMerchantType.Find(x => x.MerchantType.Contains(""));
    /*if (OtherMerchant == null)
    {
        OtherMerchant = new MERCHANT_SUMMARY_DAILY();
        OtherMerchant.NetAmount = 0;
        OtherMerchant.TransactionCount = 0;
        OtherMerchant.SaleAmount = 0;
        OtherMerchant.SaleCount = 0;
        OtherMerchant.ReturnCount = 0;
        OtherMerchant.ReturnCount = 0;
    }*/


}

<form id="mainform" action="http://localhost:21231/Report" method="POST">
    <input name="reportType" id="reportType" style="display:none" type="text">
    <input name="reportStartDate" id="reportStartDate" style="display:none" type="text">
    <input name="reportEndDate" id="reportEndDate" style="display:none" type="text">
    <input name="reportStartMonth" id="reportStartMonth" style="display:none" type="text">
    <input name="reportEndMonth" id="reportEndMonth" style="display:none" type="text">
    <input name="reportStartYear" id="reportStartYear" style="display:none" type="text">
    <input name="reportEndYear" id="reportEndYear" style="display:none" type="text">
    <input name="reportStartQuarter" id="reportStartQuarter" style="display:none" type="text">
    <input name="reportEndQuarter" id="reportEndQuarter" style="display:none" type="text">


    <ul class="nav nav-tabs">
        <li class="active"><a data-toggle="tab" href="#quick-report">Quick Report</a></li>
        <li><a data-toggle="tab" href="#report-date">Report by Date</a></li>
        <li><a data-toggle="tab" href="#report-month">Report by Month</a></li>
        <li><a data-toggle="tab" href="#report-quarter">Report by Quarter</a></li>
        <li><a data-toggle="tab" href="#report-year">Report by Year</a></li>
    </ul>

    <div class="tab-content">
        <div id="quick-report" class="tab-pane fade in active">
            <br />
            <div>
                <div class="row">
                    <div class="col-sm-4">
                        <input class="btn btn-success" value="Report This Month" id="viewThisMonth" type="button">
                    </div>
                    <div class="col-sm-4">
                        <input class="btn btn-success" value="Report This Year" id="viewThisYear" type="button">
                    </div>
                    <div class="col-sm-4">
                        <input class="btn btn-success" value="Report This Quarter" id="viewThisQuarter" type="button">
                    </div>
                </div>
            </div>
            <br />
        </div>
        <div id="report-date" class="tab-pane fade in">
            <br />
            <div class="row">
                <div class="col-sm-4">
                    <div class="form-group">
                        <input type="text" class="form-control" id="startDay" placeholder="Start Day">
                    </div>
                </div>
                <div class="col-sm-4">
                    <input class="form-control form-control-inline" value="" id="endDay" placeholder="End Day" type="text">
                </div>
                <div class="col-sm-4">
                    <input class="btn btn-success" value="View" id="viewDay" type="button">
                </div>
            </div>
            <br />
        </div>
        <div id="report-month" class="tab-pane fade">
            <br />
            <div class="row">
                <div class="col-sm-4">
                    <div class="form-group">
                        <input class="form-control" value="" id="startMonth" type="text" placeholder="Start Month">
                    </div>
                </div>
                <div class="col-sm-4">
                    <input class="form-control" value="" id="endMonth" placeholder="End Month" type="text">
                </div>
                <div class="col-sm-4">
                    <input class="btn btn-success" value="View" id="viewMonth" type="button">
                </div>
            </div>
            <br />
        </div>
        <div id="report-quarter" class="tab-pane fade">
            <br />
            <div class="col">
                <div class="row-sm-4">
                    <div class="form-group">
                        <select id="startQuarter" class="form-control">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                        </select> 
                        <input class="form-control" value="" id="startQuarterYear" placeholder="Start Quarter" type="text">
                    </div>
                </div>
                <div class="row-sm-4">
                    <select id="endQuarter" class="form-control">
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                    </select> 
                    <input class="form-control" value="" id="endQuarterYear" placeholder="End Quarter" type="text">
                </div>
                <div class="row-sm-4">
                    <input class="btn btn-success" value="View" id="viewQuarter" type="button">
                </div>
            </div>
            <br />
        </div>
        <div id="report-year" class="tab-pane fade">
            <br />
            <div class="row">
                <div class="col-sm-4">
                    <div class="form-group">
                        <input class="form-control" value="" id="startYear" placeholder="Start Year" type="text">
                    </div>
                </div>
                <div class="col-sm-4">
                    <input class="form-control" value="" id="endYear" placeholder="End Year" type="text">
                </div>
                <div class="col-sm-4">
                    <input class="btn btn-success" value="View" id="viewYear" type="button">
                </div>
            </div>
            <br />
        </div>
    </div>
</form>

@section header{
    <i class="fa fa-bar-chart-o"></i> Charts
    <a href="@Url.Action("Compare", "Report")" class="btn btn-primary">So sánh</a>
}

<link href="~/Assets/css/myStyle.css" rel="stylesheet" />
<link rel="stylesheet" href="~/Assets/css/datepicker.css">

<script src="/Assets/js/flot/excanvas.min.js"></script>
<script src="/Assets/bower_components/jquery/dist/jquery.min.js"></script>
<script src="~/Assets/js/bootstrap-datepicker.js"></script>
<script src="~/Assets/js/moment.js"></script>


<!-- From Card Type -->
<div id="CardTypeModal" class="modal">

    <!-- Modal content -->
    <div class="modal-content">

        <div class="modal-content-heading">
            Card type detail
            <span class="close">×</span>
        </div>
        <div class=" = modal-content-body">
            <div class="modal-content-body-detail">
                <h3>American Card</h3>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total revenue: @(cardTypeReport.Count() == 0 ? 0: @cardTypeReport.FirstOrDefault().AmericanExpressNetAmount)</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Total transaction: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport.FirstOrDefault().AmericanExpressTransactionCount)</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total sale: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport.FirstOrDefault().AmericanExpressAmount)</p>
                    </div>
                    <div class="col-xs-9">
                        <p>Sale count: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport.FirstOrDefault().AmericanExpressCount)</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total return: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport.FirstOrDefault().AmericanExpressReturnAmount)</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Return count: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport.FirstOrDefault().AmericanExpressReturnCount)</p>
                    </div>
                </div>
            </div>

            <div class="modal-content-body-detail">
                <h3>Debit Card</h3>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total revenue: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].DebitCardNetAmount)</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Total transaction: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].DebitCardTransactionCount)</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total sale: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].DebitCardAmount)</p>
                    </div>
                    <div class="col-xs-9">
                        <p>Sale count: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].DebitCardCount)</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total return: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].DebitCardReturnAmount)</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Return count: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].DebitCardReturnCount)</p>
                    </div>
                </div>
            </div>

            <div class="modal-content-body-detail">
                <h3>Discover Card</h3>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total revenue: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].DiscoverCardNetAmount)</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Total transaction: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].DiscoverCardTransactionCount)</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total sale: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].DiscoverCardAmount)</p>
                    </div>
                    <div class="col-xs-9">
                        <p>Sale count: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].DiscoverCardCount)</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total return: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].DiscoverCardReturnAmount)</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Return count: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].DiscoverCardReturnCount)</p>
                    </div>
                </div>
            </div>

            <div class="modal-content-body-detail">
                <h3>Foreign Card</h3>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total revenue: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].ForeignCardNetAmount)</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Total transaction: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].ForeignCardTransactionCount)</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total sale: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].ForeignCardAmount)</p>
                    </div>
                    <div class="col-xs-9">
                        <p>Sale count: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].ForeignCardCount)</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total return: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].ForeignCardReturnAmount)</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Return count: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].ForeignCardReturnCount)</p>
                    </div>
                </div>
            </div>

            <div class="modal-content-body-detail">
                <h3>Master Card</h3>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total revenue: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].MasterCardNetAmount)</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Total transaction: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].MasterCardTransactionCount)</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total sale: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].MasterCardAmount)</p>
                    </div>
                    <div class="col-xs-9">
                        <p>Sale count: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].MasterCardCount)</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total return: @(cardTypeReport.Count() == 0 ? 0 :@cardTypeReport[0].MasterCardReturnAmount)</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Return count: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].MasterCardReturnCount)</p>
                    </div>
                </div>
            </div>

            <div class="modal-content-body-detail">
                <h3>Visa Card</h3>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total revenue: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].VisaCardNetAmount )</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Total transaction: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].VisaCardTransactionCount)</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total sale: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].VisaCardAmount)</p>
                    </div>
                    <div class="col-xs-9">
                        <p>Sale count: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].VisaCardCount)</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total return: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].VisaCardReturnAmount)</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Return count: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].VisaCardReturnCount)</p>
                    </div>
                </div>
            </div>

            <div class="modal-content-body-detail">
                <h3>Master Card</h3>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total revenue: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].OtherCardNetAmount)</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Total transaction: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].OtherCardTransactionCount)</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total sale: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].OtherCardAmount)</p>
                    </div>
                    <div class="col-xs-9">
                        <p>Sale count: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].OtherCardCount)</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total return: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].OtherCardReturnAmount)</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Return count: @(cardTypeReport.Count() == 0 ? 0 : @cardTypeReport[0].OtherCardReturnCount)</p>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<!-- End form card type-->
<!-- Form Religion-->
<div id="RegionModal" class="modal">

    <!-- Modal content -->

    <div class="modal-content">
        <div class="modal-content-heading">
            Region type detail
            <span class="close">×</span>
        </div>
        <div class="modal-content-body">
            <div class="modal-content-body-detail">
                <h3>North VN</h3>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total revenue: @NorthVN.NetAmount </p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Total transaction: @NorthVN.TransactionCount </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total sale: @NorthVN.SaleAmount </p>
                    </div>
                    <div class="col-xs-9">
                        <p>Sale count: @NorthVN.SaleCount </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total return: @NorthVN.ReturnAmount</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Return count: @NorthVN.ReturnCount</p>
                    </div>
                </div>
            </div>
            <div class="modal-content-body-detail">
                <h3>South VN</h3>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total revenue: @SouthVN.NetAmount </p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Total transaction: @SouthVN.TransactionCount </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total sale: @SouthVN.SaleAmount </p>
                    </div>
                    <div class="col-xs-9">
                        <p>Sale count: @NorthVN.SaleCount </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total return: @NorthVN.ReturnAmount</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Return count: @NorthVN.ReturnCount</p>
                    </div>
                </div>
            </div>
            <div class="modal-content-body-detail">
                <h3>Middle VN</h3>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total revenue:@MiddleVN.NetAmount </p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Total transaction: @MiddleVN.TransactionCount </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total sale: @MiddleVN.SaleAmount </p>
                    </div>
                    <div class="col-xs-9">
                        <p>Sale count: @MiddleVN.SaleCount </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total return: @MiddleVN.ReturnAmount</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Return count: @MiddleVN.ReturnCount</p>
                    </div>
                </div>
            </div>
            <div class="modal-content-body-detail">
                <h3>North USA</h3>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total revenue:@NorthUSA.NetAmount </p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Total transaction: @NorthUSA.TransactionCount </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total sale: @NorthUSA.SaleAmount </p>
                    </div>
                    <div class="col-xs-9">
                        <p>Sale count: @NorthUSA.SaleCount </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total return: @NorthUSA.ReturnAmount</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Return count: @NorthUSA.ReturnCount</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- End form religion-->
<!--Begin form merchant type -->
<div id="MerchantTypeModal" class="modal">

    <!-- Modal content -->
    <div class="modal-content">

        <div class="modal-content-heading">
            Merchant type detail
            <span class="close">×</span>
        </div>
        <div class="modal-content-body">
            <div class="modal-content-body-detail">
                <h3> Merchant Clothes</h3>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total revenue:@MerchantClothes.NetAmount </p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Total transaction: @MerchantClothes.TransactionCount </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total sale: @MerchantClothes.SaleAmount </p>
                    </div>
                    <div class="col-xs-9">
                        <p>Sale count: @MerchantClothes.SaleCount </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total return: @MerchantClothes.ReturnAmount</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Return count: @MerchantClothes.ReturnCount</p>
                    </div>
                </div>
            </div>
            <div class="modal-content-body-detail">
                <h3>Merchant Diner</h3>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total revenue:@MerchantDiner.NetAmount </p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Total transaction: @MerchantDiner.TransactionCount </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total sale: @MerchantDiner.SaleAmount </p>
                    </div>
                    <div class="col-xs-9">
                        <p>Sale count: @MerchantDiner.SaleCount </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total return: @MerchantDiner.ReturnAmount</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Return count: @MerchantDiner.ReturnCount</p>
                    </div>
                </div>
            </div>
            <div class="modal-content-body-detail">
                <h3>Merchant Hotel</h3>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total revenue:@MerchantHotel.NetAmount </p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Total transaction: @MerchantHotel.TransactionCount </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total sale: @MerchantHotel.SaleAmount </p>
                    </div>
                    <div class="col-xs-9">
                        <p>Sale count: @MerchantHotel.SaleCount </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total return: @MerchantHotel.ReturnAmount</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Return count: @MerchantHotel.ReturnCount</p>
                    </div>
                </div>
            </div>
            <div class="modal-content-body-detail">
                <h3>Merchant Resort</h3>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total revenue:@MerchantResort.NetAmount </p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Total transaction: @MerchantResort.TransactionCount </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total sale: @MerchantResort.SaleAmount </p>
                    </div>
                    <div class="col-xs-9">
                        <p>Sale count: @MerchantResort.SaleCount </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total return: @MerchantResort.ReturnAmount</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Return count: @MerchantResort.ReturnCount</p>
                    </div>
                </div>
            </div>
            <div class="modal-content-body-detail">
                <h3>Merchant Supermarket</h3>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total revenue @MerchantSupermarket.NetAmount </p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Total transaction: @MerchantSupermarket.TransactionCount </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total sale: @MerchantSupermarket.SaleAmount </p>
                    </div>
                    <div class="col-xs-9">
                        <p>Sale count: @MerchantSupermarket.SaleCount </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total return: @MerchantSupermarket.ReturnAmount</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Return count: @MerchantSupermarket.ReturnCount</p>
                    </div>
                </div>
            </div>
            <div class="modal-content-body-detail">
                <h3>Merchant Store</h3>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total revenue @MerchantStore.NetAmount </p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Total transaction: @MerchantStore.TransactionCount </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total sale: @MerchantStore.SaleAmount </p>
                    </div>
                    <div class="col-xs-9">
                        <p>Sale count: @MerchantStore.SaleCount </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total return: @MerchantStore.ReturnAmount</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Return count: @MerchantStore.ReturnCount</p>
                    </div>
                </div>
            </div>
            <div class="modal-content-body-detail">
                <h3>Other Merchant</h3>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total revenue @OtherMerchant.NetAmount </p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Total transaction: @OtherMerchant.TransactionCount </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total sale: @OtherMerchant.SaleAmount </p>
                    </div>
                    <div class="col-xs-9">
                        <p>Sale count: @OtherMerchant.SaleCount </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-9">
                        <p>Total return: @OtherMerchant.ReturnAmount</p>
                    </div>
                    <div class="col-xs-9 ">
                        <p>Return count: @OtherMerchant.ReturnCount</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- End form merchant type-->
<!-- Flot Charts -->
<div class="row">
    <div class="col-lg-3 col-md-6">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-xs-3">
                        <i class="fa fa-money fa-5x"></i>
                    </div>
                    <div class="col-xs-9 text-right">
                        <div class="h4">@cardTypeReport.FirstOrDefault().NetAmount</div>
                        <div>Total Revenue</div>
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div class="col-lg-3 col-md-6">
        <div class="panel panel-green">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-xs-3">
                        <i class="fa fa-shopping-cart fa-5x"></i>
                    </div>
                    <div class="col-xs-9 text-right">
                        <div class="h4">@cardTypeReport.FirstOrDefault().SaleAmount</div>
                        <div>Total sales</div>
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div class="col-lg-3 col-md-6">
        <div class="panel panel-yellow">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-xs-3">
                        <i class="fa fa-warning fa-5x"></i>
                    </div>
                    <div class="col-xs-9 text-right">
                        <div class="h4">@cardTypeReport.FirstOrDefault().ReturnAmount</div>
                        <div>Total returns</div>
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div class="col-lg-3 col-md-6">
        <div class="panel panel-red">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-xs-3">
                        <i class="fa fa-support fa-5x"></i>
                    </div>
                    <div class="col-xs-9 text-right">
                        <div class="h4">@cardTypeReport.FirstOrDefault().TransactionCount</div>
                        <div>Total transactions</div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
<!-- /.row -->
<div class="row">
    <div class="col-lg-4" style="width:60%">
        <div class="panel panel-red">
            <div class="panel-heading">
                <h3 class="panel-title"><i class="fa fa-long-arrow-right"></i> Revenue Graph</h3>
            </div>
            <div class="panel-body">
                <div id="morris-line-chart"></div>
                <div id="detailRevenueBtn" class="text-right" onclick="Display('detailRevenueBtn','RevenueModal',0)">
                  
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-4" style="width:33%">
        <div class="panel panel-green">
            <div class="panel-heading">
                <h3 class="panel-title"><i class="fa fa-long-arrow-right"></i> Card Type</h3>
            </div>
            <div class="panel-body">
                <div class="flot-chart">
                    <div class="flot-chart-content" id="flot-pie-chart"></div>
                </div>
                <div id="detailCardTypeBtn" class="text-right" onclick="Display('detailCardTypeBtn','CardTypeModal',1)">
                    <a>View Details <i class="fa fa-arrow-circle-right"></i></a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-4" style="width:60%;min-width:400px">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title"><i class="fa fa-long-arrow-right"></i> Region</h3>
            </div>
            <div class="panel-body">
                <div id="morris-bar-chart"></div>
                <div id="detailReligionBtn" class="text-right" onclick="Display('detailReligionBtn','RegionModal',2)">
                    <a>View Details <i class="fa fa-arrow-circle-right"></i></a>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-4" style="width:33%;min-width:400px">
        <div class="panel panel-yellow">
            <div class="panel-heading">
                <h3 class="panel-title"><i class="fa fa-long-arrow-right"></i> Merchant Type</h3>
            </div>
            <div class="panel-body">
                <div id="morris-donut-chart"></div>
                <div id="detailMerchantTypeBtn" class="text-right" onclick="Display('detailMerchantTypeBtn','MerchantTypeModal',3)">
                    <a href="#">View Details <i class="fa fa-arrow-circle-right"></i></a>
                </div>
            </div>
        </div>
    </div>


</div>
<!-- /.row -->

<script src="~/Assets/js/MyCustomJS.js"></script>
<script>
    $(function () {
        @{
            var DonutData = String.Empty;
            var BarData = String.Empty;
            var LineData = String.Empty;
            var CardTypeData = String.Empty;

            foreach (MERCHANT_SUMMARY item in listMerchantType)
            {
                if (item.MerchantType == null)
                {
                    item.MerchantType = "Khác";
                }
                DonutData += "{label: \"{0}\", value: {1} },".Replace("{0}", item.MerchantTypeName).Replace("{1}", item.SaleAmount.ToString());
            }
            if (DonutData.Length > 1)
            {
                DonutData = HttpUtility.HtmlDecode(DonutData.Substring(0, DonutData.Length - 1));
            }

            foreach (Statistic item in lineChartData)
            {
                if (item.Name == null)
                {
                    item.Name = "Khác";
                }
                LineData += "{d: \"{0}\", sales: {1},returns:{2},count: {3} },".Replace("{0}", item.Name).Replace("{1}", item.Value.ToString()).Replace("{2}", item.ReturnAmount.ToString()).Replace("{3}", item.TransactionCount.ToString());
            }
            if (LineData.Length > 1)
            {
                LineData = LineData.Substring(0, LineData.Length - 1);
            }

            foreach (MERCHANT_SUMMARY item in listRegion)
            {
                if (item.RegionCode == null)
                {
                    item.RegionCode = "Khác";
                }
                BarData += "{region: \"{0}\", sale: {1} },".Replace("{0}", item.RegionName).Replace("{1}", item.SaleAmount.ToString());
            }
            if (BarData.Length > 1)
            {
                BarData = BarData.Substring(0, BarData.Length - 1);
            }


            foreach (MERCHANT_SUMMARY item in cardTypeReport)
            {
                CardTypeData += "{label: \"{0}\", data: {1} },".Replace("{0}", "Foreign Card").Replace("{1}", item.ForeignCardAmount.ToString());
                CardTypeData += "{label: \"{0}\", data: {1} },".Replace("{0}", "Debit Card").Replace("{1}", item.DebitCardAmount.ToString());
                CardTypeData += "{label: \"{0}\", data: {1} },".Replace("{0}", "Visa Card").Replace("{1}", item.VisaCardAmount.ToString());
                CardTypeData += "{label: \"{0}\", data: {1} },".Replace("{0}", "Discover Card").Replace("{1}", item.DiscoverCardAmount.ToString());
                CardTypeData += "{label: \"{0}\", data: {1} },".Replace("{0}", "Master Card").Replace("{1}", item.MasterCardAmount.ToString());
                CardTypeData += "{label: \"{0}\", data: {1} },".Replace("{0}", "American Express Card").Replace("{1}", item.AmericanExpressAmount.ToString());
                CardTypeData += "{label: \"{0}\", data: {1} }".Replace("{0}", "Other Card").Replace("{1}", item.OtherCardAmount.ToString());
            }


        }

        // Donut Chart
        Morris.Donut({
            element: 'morris-donut-chart',
            data: [@Html.Raw(DonutData)],
            resize: true
        });

        Morris.Bar({
            element: 'morris-bar-chart',
            data: [@Html.Raw(BarData)],
            xkey: 'region',
            ykeys: ['sale'],
            labels: ['Sale amount'],
            barRatio: 0.4,
            xLabelAngle: 35,
            hideHover: 'auto',
            resize: true
        });

        Morris.Line({
            // ID of the element in which to draw the chart.
            element: 'morris-line-chart',
            // Chart data records -- each entry in this array corresponds to a point on
            // the chart.
            data: [@Html.Raw(LineData)],
            // The name of the data record attribute that contains x-visitss.
            xkey: 'd',
            // A list of names of data record attributes that contain y-visitss.
            ykeys: ['sales'],
            // Labels for the ykeys -- will be displayed when you hover over the
            // chart.
            labels: ['Sale amount'],
            // Disables line smoothing
            smooth: false,
            resize: true,
            parseTime: false,
            lineColors: ['#F5ABB0'],
            pointFillColors: ['#FF3300'],
            hoverCallback: function (index, options, content) {
                var data = options.data[index];
                content = "<div class='morris-hover-row-label'>" + data.d + "</div><div class='morris-hover-point' style='color: #0b62a4'>Sale Amount: $" + data.sales + "<br>Return Amount: $"+ -data.returns+ "<br>Transactions: "+ data.count+ "</div>"
                return content
            },
        });

        var data = [@Html.Raw(CardTypeData)];

        var plotObj = $.plot($("#flot-pie-chart"), data, {
            series: {
                pie: {
                    show: true
                }
            },
            grid: {
                hoverable: true
            },
            tooltip: true,
            tooltipOpts: {
                content: "%p.0%, %s", // show percentages, rounding to 2 decimal places
                shifts: {
                    x: 20,
                    y: 0
                },
                defaultTheme: false
            }
        });
    });

</script>

<script>
    function Display(idBtn, idForm, index) {
        // Get the modal
        var modal = document.getElementById(idForm);

        // Get the button that opens the modal
        //var btn = document.getElementById(idBtn);
        // Get the <span> element that closes the modal
        var span = document.getElementsByClassName("close")[index];

        // When the user clicks the button, open the modal

        //btn.onclick = function () {
        modal.style.display = "block";
        //}

        // When the user clicks on <span> (x), close the modal
        span.onclick = function () {
            modal.style.display = "none";
        }

        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function (event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }
    }


</script>
<script type="text/javascript">
    // When the document is ready
    $(document).ready(function () {

        $('#example1').datepicker({
            format: "mm/yyyy",
            viewMode: "months",
            minViewMode: "months"
        });

        //Config for Quarter
        /*
        $.fn.datepicker.dates['qtrs'] = {
          days: ["Sunday", "Moonday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
          daysShort: ["Sun", "Moon", "Tue", "Wed", "Thu", "Fri", "Sat"],
          daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
          months: ["Q1", "Q2", "Q3", "Q4", "", "", "", "", "", "", "", ""],
          monthsShort: ["Jan&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Feb&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Mar", "Apr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;May&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Jun", "Jul&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Aug&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sep", "Oct&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nov&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dec", "", "", "", "", "", "", "", ""],
          today: "Today",
          clear: "Clear",
          format: "mm/dd/yyyy",
          titleFormat: "MM yyyy",

          weekStart: 0
        };
        */
        //End Config for Quarter


        var nowTemp = new Date();
        var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);

        var startDay = $('#startDay').datepicker({
            format: "dd/mm/yyyy"
        }).on('changeDate', function (ev) {
            if (ev.date.valueOf() > endDay.date.valueOf()) {
                var newDate = new Date(ev.date)
                newDate.setDate(newDate.getDate() + 1);
                endDay.setValue(newDate);
            }
            startDay.hide();
            $('#endDay')[0].focus();
        }).data('datepicker');

        var endDay = $('#endDay').datepicker({
            format: "dd/mm/yyyy",
            onRender: function (date) {
                
            }
        }).on('changeDate', function (ev) {
            endDay.hide();
        }).data('datepicker');

        //Month
        var startMonth = $('#startMonth').datepicker({
            format: "mm/yyyy",
            viewMode: "months",
            minViewMode: "months",
            onRender: function (date) {
                return date.valueOf() < now.valueOf() ? 'disabled' : '';
            }
        }).on('changeDate', function (ev) {
            if (ev.date.valueOf() > endMonth.date.valueOf()) {
                var newDate = new Date(ev.date)
                newDate.setDate(newDate.getDate() + 1);
                endMonth.setValue(newDate);
            }
            startMonth.hide();
            $('#endMonth')[0].focus();
        }).data('datepicker');

        var endMonth = $('#endMonth').datepicker({
            format: "mm/yyyy",
            viewMode: "months",
            minViewMode: "months",
            onRender: function (date) {
                return date.valueOf() <= startMonth.date.valueOf() ? 'disabled' : '';
            }
        }).on('changeDate', function (ev) {
            endMonth.hide();
        }).data('datepicker');

        //Year
        var startYear = $('#startYear').datepicker({
            format: " yyyy",
            viewMode: "years",
            minViewMode: "years",
            onRender: function (date) {
                return date.valueOf() < now.valueOf() ? 'disabled' : '';
            }
        }).on('changeDate', function (ev) {
            if (ev.date.valueOf() > endYear.date.valueOf()) {
                var newDate = new Date(ev.date)
                newDate.setDate(newDate.getDate() + 1);
                endYear.setValue(newDate);
            }
            startYear.hide();
            $('#endYear')[0].focus();
        }).data('datepicker');

        var endYear = $('#endYear').datepicker({
            format: " yyyy",
            viewMode: "years",
            minViewMode: "years",
            onRender: function (date) {
                return date.valueOf() <= startYear.date.valueOf() ? 'disabled' : '';
            }
        }).on('changeDate', function (ev) {
            endYear.hide();
        }).data('datepicker');

        //Quarter
        var startQuarter = $('#startQuarterYear').datepicker({
            format: " yyyy",
            viewMode: "years",
            minViewMode: "years",
            onRender: function (date) {
                return date.valueOf() < now.valueOf() ? 'disabled' : '';
            }
        }).on('changeDate', function (ev) {
            if (ev.date.valueOf() > endYear.date.valueOf()) {
                var newDate = new Date(ev.date)
                newDate.setDate(newDate.getDate() + 1);
                endYear.setValue(newDate);
            }
            startQuarter.hide();
            $('#endQuarterYear')[0].focus();
        }).data('datepicker');

        var endQuarter = $('#endQuarterYear').datepicker({
            format: " yyyy",
            viewMode: "years",
            minViewMode: "years",
            onRender: function (date) {
                return date.valueOf() <= startYear.date.valueOf() ? 'disabled' : '';
            }
        }).on('changeDate', function (ev) {
            endQuarter.hide();
        }).data('datepicker');

    });
</script>

<script>
    $(document).ready(function () {
        var dateFormat = 'YYYYMMDD';
        $('#viewThisMonth').click(function () {
            $("#reportStartDate").attr("value", moment().startOf('month').format(dateFormat));
            $("#reportEndDate").attr("value", moment().startOf('day').format(dateFormat));
            $("#reportType").attr("value", "Day");
            $("#mainform").submit();
        });

        $('#viewThisYear').click(function () {
            $("#reportStartMonth").attr("value", '1');
            $("#reportEndMonth").attr("value", moment().startOf('month').format('MM'));
            $("#reportStartYear").attr("value", moment().startOf('year').format('YYYY'));
            $("#reportEndYear").attr("value", moment().startOf('year').format('YYYY'));
            $("#reportType").attr("value", "Month");
            $("#mainform").submit();
        });

        $('#viewThisQuarter').click(function () {
            $("#reportStartMonth").attr("value", moment().startOf('quarter').format('MM'));
            $("#reportEndMonth").attr("value", moment().startOf('month').format('MM'));
            $("#reportStartYear").attr("value", moment().startOf('year').format('YYYY'));
            $("#reportEndYear").attr("value", moment().startOf('year').format('YYYY'));
            $("#reportType").attr("value", "Month");
            $("#mainform").submit();
        });

        $('#viewDay').click(function () {
            $("#reportStartDate").attr("value", moment($('#startDay').val(), "DD/MM/YYYY").format(dateFormat));
            $("#reportEndDate").attr("value", moment($('#endDay').val(), "DD/MM/YYYY").format(dateFormat));
            $("#reportType").attr("value", "Day");
            $("#mainform").submit();
        });

        $('#viewMonth').click(function () {
            var startDateUserInput = moment("01/" + $('#startMonth').val(), "DD/MM/YYYY");
            var endDateUserInput = moment("01/" + $('#endMonth').val(), "DD/MM/YYYY");

            if ($('#startMonth').val() === $('#endMonth').val()) {
                $("#reportStartDate").attr("value", startDateUserInput.format(dateFormat));
                $("#reportEndDate").attr("value", endDateUserInput.endOf("month").format(dateFormat));
                $("#reportType").attr("value", "Day");
            } else {
                $("#reportStartMonth").attr("value", startDateUserInput.format('MM'));
                $("#reportEndMonth").attr("value", endDateUserInput.format('MM'));
                $("#reportStartYear").attr("value", startDateUserInput.format('YYYY'));
                $("#reportEndYear").attr("value", endDateUserInput.format('YYYY'));
                $("#reportType").attr("value", "Month");
            }
           
            $("#mainform").submit();
        });

        $('#viewQuarter').click(function () {
            var startQuarterRp = document.getElementById('startQuarter').value;
            var endQuarterRp = document.getElementById('endQuarter').value;
            var startYearRp = $('#startQuarterYear').val().trim();
            var endYearRp = $('#endQuarterYear').val().trim();

            if ((startQuarterRp === endQuarterRp) && (startYearRp === endYearRp)) { //report by month
                $("#reportStartMonth").attr("value", (startQuarterRp - 1) * 3 + 1);
                $("#reportEndMonth").attr("value", (endQuarterRp - 1) * 3 + 1);
                $("#reportStartYear").attr("value", startYearRp);
                $("#reportEndYear").attr("value", startYearRp);
                $("#reportType").attr("value", "Month");
                $("#mainform").submit();
            } else { //report by quarter
                $("#reportStartQuarter").attr("value", startQuarterRp);
                $("#reportEndQuarter").attr("value", endQuarterRp);
                $("#reportStartYear").attr("value", startYearRp);
                $("#reportEndYear").attr("value", endYearRp);
                $("#reportType").attr("value", "Quarter");
                $("#mainform").submit();
            }

            $("#startdate").attr("value", moment("01/" + $('#startQuarter').val(), "DD/MM/YYYY").format(dateFormat));
            $("#enddate").attr("value", moment("01/" + $('#endQuarter').val(), "DD/MM/YYYY").endOf("month").format(dateFormat));
            $("#mainform").submit();

            console.log(moment("01/" + $('#startMonth').val(), "DD/MM/YYYY").format(dateFormat));
            console.log(moment("01/" + $('#endMonth').val(), "DD/MM/YYYY").endOf("month").format(dateFormat));
        });

        $('#viewYear').click(function () {
            if ($('#startYear').val() === $('#endYear').val()) {
                $("#reportStartMonth").attr("value", '1');
                $("#reportEndMonth").attr("value", '12');
               
                $("#reportType").attr("value", "Month");
            } else {
                $("#reportType").attr("value", "Year");
            }
            $("#reportStartYear").attr("value", $('#startYear').val().replace(" ", ""));
            $("#reportEndYear").attr("value", $('#endYear').val().replace(" ", ""));

            $("#mainform").submit();
        });

    });
</script>
